<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    
    <div class="container">
        <h1>Reset Password</h1>
        <form id="registerForm" action="/postPassword" method="post" onsubmit="return validateForm()" novalidate>
            
            <div class="form-control">
                <input type="password" name="password" required>
                <label>Enter new password</label>
            </div>
            <div id="passwordError" class="error"></div>
            <div class="form-control">
                <input type="password" name="cpassword" required>
                <label>Confirm Password</label>
            </div>
            <div id="cpasswordError" class="error"></div>
            <button type="submit" class="btn">Submit</button>
            <!-- <p class="text">Already Have Account? please <a href="userLogin">Login</a></p> -->
        </form>
        <% if (typeof message !== 'undefined') { %>
            <p><%= message %> </p>
          <% } %>
    </div>
    <script src="script.js"></script>
</body>
</html>


<script>
    function validateForm() {
    
      const password = document.querySelector('input[name="password"]').value.trim();
      const cpassword = document.querySelector('input[name="cpassword"]').value.trim();
  
    
      const passwordError = document.getElementById('passwordError');
      const cpasswordError = document.getElementById('cpasswordError');
  
      passwordError.textContent = "";
      cpasswordError.textContent = "";
  
      let isValid = true;
  
      
      if (password === '') {
          passwordError.textContent = 'Password field is required';
          isValid = false;
      }else {
          if(password.length<6){
              passwordError.textContent='password must be 6 characters'
          }
      }
      if (cpassword === '') {
          cpasswordError.textContent = 'Confirm Password field is required';
          isValid = false;
      } else {
          if (cpassword !== password) {
              cpasswordError.textContent = 'Passwords do not match';
              isValid = false;
          }
      }
  
  
      if (!isValid) {
          setTimeout(() => {
             
              passwordError.textContent = "";
              cpasswordError.textContent = "";
          }, 3000);
      }
      return isValid;
  }
  
  
  document.getElementById('registerForm').addEventListener('submit',function(event){
      if(!validateForm()){
          event.preventDefault();
      }
  })
  
  
  </script>


<style>
    @import url('https://fonts.googleapis.com/css2?family=Muli');

*{
    box-sizing: border-box;
}

body{
    background-image: linear-gradient(120deg, #ffffff 0%, #a8a8a8 100%);
    color: #000;
    font-family: 'Muli', sans-serif;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    overflow: hidden;
    position: relative; /* Add this to position the login button */
}

.error {
    color: red;
    font-size: 10px;
}

.container{
    background-color:#fffefe;
    padding: 20px;
    border-radius: 5px;
}

.container h1{
    text-align: center;
    padding-bottom:10px;
    margin-bottom: 15px;
}

.container a{
    text-decoration: none;
    color: rgb(154, 163, 255);
}

.btn{
    cursor: pointer;
    display: inline;
    width: 100%;
    background-color: rgb(156, 165, 255);
    padding: 10px;
    font-family: inherit;
    font-size: 15px;
    border: 0;
    border-radius: 5px;
}

.form-control{
    position: relative;
    margin: 15px 0 35px;
    width: 300px;
}

.btn:focus{
    outline: 0;
}

.btn:active{
    transform: scale(0.98);
}

.text{
    margin-top: 20px;
}

.form-control input{
    background-color: transparent;
    border: 0;
    border-bottom: 2px #000 solid;
    display: block;
    width: 100%;
    padding: 9px 0;
    font-size: 18px;
    color:#000;
}

.form-control input:focus,
.form-control input:valid{
    outline: 0;
    border-bottom-color:#4facfe ;
}

.form-control label {
    position: absolute;
    top: 15px;
    left: 0;
    pointer-events: none;
}

.form-control label span{
    display: inline-block;
    font-size: 15px;
    min-width: 5px;
    transition: 0.3s cubic-bezier(0.58,-0.45,0.245,1.55);
}

.form-control input:focus + label span,
.form-control input:valid + label span {
    color: #4facfe;
    transform: translateY(-30px);
}

/* New styles for login button */
.login-container {
    position: absolute;
    top: 20px;
    right: 20px;
}

.login-btn {
    background-color: #4facfe;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    text-decoration: none;
    font-size: 15px;
    cursor: pointer;
}

.login-btn:hover {
    background-color: #3a8fbd;
}

</style>

<script>
    const labels=document.querySelectorAll('.form-control label')

labels.forEach(label=>{
    label.innerHTML=label.innerText.split('')
    .map((letter,    idx)=>`<span style="transition-delay:${idx*10}ms">${letter}</span>`
).join('')
})
</script>