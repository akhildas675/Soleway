<!DOCTYPE html>
<html lang="zxx">
<meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>Checkout Page</title>

    <!-- ::::::::::::::Favicon icon::::::::::::::-->
    <link rel="shortcut icon" href="/user-assets/images/icons/FAVICON SW.png" type="image/png" />

    <!-- Bootstrap Icons CDN -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.3/font/bootstrap-icons.min.css"
        rel="stylesheet" />

    <!-- ::::::::::::::All CSS Files here :::::::::::::: -->
    <!-- Vendor CSS -->
    <!-- <link rel="stylesheet" href="/userMng-assets/css/vendor/font-awesome.min.css">
    <link rel="stylesheet" href="/userMng-assets/css/vendor/ionicons.css">
    <link rel="stylesheet" href="/userMng-assets/css/vendor/simple-line-icons.css">
    <link rel="stylesheet" href="/userMng-assets/css/vendor/jquery-ui.min.css"> -->

    <!-- Plugin CSS -->
    <!-- <link rel="stylesheet" href="/userMng-assets/css/plugins/swiper-bundle.min.css">
    <link rel="stylesheet" href="/userMng-assets/css/plugins/animate.min.css">
    <link rel="stylesheet" href="/userMng-assets/css/plugins/nice-select.css">
    <link rel="stylesheet" href="/userMng-assets/css/plugins/venobox.min.css">
    <link rel="stylesheet" href="/userMng-assets/css/plugins/jquery.lineProgressbar.css">
    <link rel="stylesheet" href="/userMng-assets/css/plugins/aos.min.css"> -->

    <!-- Main CSS -->
    <!-- <link rel="stylesheet" href="/userMng-assets/sass/style.css"> -->

    <!-- Use the minified version files listed below for better performance and remove the files listed above -->
    <!-- soleway css -->

    <%- include('./partials/solewayCss.ejs') %>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <link rel="stylesheet" href="/userMng-assets/css/vendor/vendor.min.css" />
        <link rel="stylesheet" href="/userMng-assets/css/plugins/plugins.min.css" />
        <link rel="stylesheet" href="/userMng-assets/css/style.min.css" />
        <!-- Tostify link -->

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />

        <style>
            .address-box {
                display: block;
                border: 1px solid #ccc;
                border-radius: 5px;
                padding: 15px;
                margin-top: 10px;
                cursor: pointer;
                background-color: #f9f9f9;
                transition: background-coloir 0.3s ease;
                width: 70%;
                /* Adjust this value to your desired width */
                max-width: 400px;
                /* Optional: Set a maximum width */
            }

            .address-box:hover {
                background-color: #e9e9e9;
            }

            .form-check-input:checked+.address-box {
                background-color: #d9d9d9;
                border-color: #000000;
            }

            .form-check {
                display: flex;
                align-items: center;
                /* margin-bottom: 15px; */
            }

            .form-check-input {
                /* margin-right: 10px; Space between input and label */
                margin-top: 0;
                /* Aligns the radio button/checkbox vertically with the label */
            }

            .address-box {
                /* width: 100%; Ensure the label box takes full width */
                display: flex;
                flex-direction: column;
                justify-content: center;
                padding: 10px;
            }

            .form-check-label {
                margin-bottom: 0;
                /* Remove default margin to keep alignment intact */
                display: block;
            }

            .btn-primary {
                background-color: #000;
                border-color: #000;
                padding: 10px 20px;
                font-size: 14px;
                /* Reduce font size */
                border-radius: 4px;
                /* Adjust border radius for a smaller button */
                color: #fff;
                /* Set text color to white for better contrast */
            }

            .btn-primary:hover {
                background-color: #333;
                border-color: #333;
            }

            /* Order Table Styles */
            #orderTable {
                width: 100%;
                border-collapse: collapse;
                font-family: "Arial", sans-serif;
                background-color: #f9f9f9;
                border: 1px solid #ddd;
                border-radius: 10px;
                overflow: hidden;
            }

            #orderTable th {
                padding: 12px;
                text-align: left;
                background-color: #333;
                color: #fff;
            }

            #orderTable td {
                padding: 12px;
                vertical-align: top;
            }

            #orderTable .product-row {
                border-bottom: 1px solid #ddd;
            }

            #orderTable .product-row td img {
                width: 100px;
                height: 100px;
                object-fit: cover;
                border-radius: 5px;
            }

            #orderTable .product-row td {
                padding: 15px;
            }

            #orderTable .product-row td:nth-child(2) {
                padding-left: 20px;
            }

            #availableCoupons {
                font-size: 16px;
                color: #333;
            }

            #availableCoupons ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }

            #availableCoupons li {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 10px 20px;
                border: 1px solid #ddd;
                border-radius: 8px;
                background: linear-gradient(to right, #434343 0%, black 100%);
                margin-bottom: 10px;
                box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            }

            #availableCoupons button {
                padding: 6px 12px;
                background-color: #000000;
                color: white;
                border: none;
                cursor: pointer;
                border-radius: 20px;
                transition: background-color 0.3s ease;
            }

            #availableCoupons button:hover {
                background-color: #373737;
            }

            #orderTable .grand-total-row {
                background-color: #f2f2f2;
                font-weight: bold;
                text-align: center;
                padding: 20px;
                border-top: 2px solid #ddd;
            }

            .order-container {
                border: 1px solid #ddd;
                padding: 20px;
                background-color: #fff;
                border-radius: 10px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            }

            .order-title {
                margin-bottom: 20px;
                font-size: 22px;
                font-weight: bold;
                color: #333;
            }

            /* Coupon Text Colors */
            .no-offer {
                color: red;
            }

            .offer-available {
                color: rgb(0, 0, 0);
            }

            .coupon-code {
                font-size: 14px;
                color: #ffffff;
                background: linear-gradient(to right, #434343 0%, black 100%);
                padding: 5px 0px;
                border-radius: 5px;
            }

            .coupon-name {
                color: #ffffff;
                /* Example color, change to whatever you prefer */
                font-weight: bold;
                font-size: 16px;
                /* Adjust size if needed */
            }
        </style>
</head>

<body>
    <!-- Start Header Area -->
    <header class="header-section d-none d-xl-block">
        <div class="header-wrapper">
            <div
                class="header-bottom header-bottom-color--black section-fluid sticky-header sticky-color--Black blackbg">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12 d-flex align-items-center justify-content-between color--Black blackbg">
                            <!-- Start Header Logo -->
                            <div class="header-logo">
                                <div class="logo">
                                    <a href="/"><img src="/userMng-assets/images/logo/1.png" alt="" /></a>
                                </div>
                            </div>
                            <!-- End Header Logo -->

                            <!-- Start Header Main Menu -->
                            <div class="main-menu menu-color--black menu-hover-color--Black">
                                <nav>
                                    <ul>
                                        <li class="has-dropdown">
                                            <a class="active main-menu-link" href="/">Home <i class="fa"></i></a>
                                            <!-- Sub Menu -->
                                        </li>
                                        <li class="has-dropdown has-megaitem">
                                            <a href="/Shop">Shop <i class="fa"></i></a>
                                            <!-- Mega Menu -->
                                        </li>
                                        
                                        <li class="has-dropdown">
                                            <a href="/Blog">Blog<i class="fa"></i></a>
                                            <!-- Sub Menu -->
                                        </li>
                                        <li>
                                            <a href="/About">About Us</a>
                                        </li>
                                        <li>
                                            <a href="/Contact">Contact Us</a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                            <!-- End Header Main Menu Start -->

                            <!-- Start Header Action Link -->
                            <ul class="header-action-link action-color--white action-hover-color--white">
                                <li>

                                </li>
                                <li>

                                </li>
                                <li>

                                </li>
                                <li>
                                    <a href="#offcanvas-about" class="offacnvas offside-about offcanvas-toggle">
                                        <i class="icon-menu"></i>
                                    </a>
                                </li>
                            </ul>
                            <!-- End Header Action Link -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Start Header Area -->

    <!-- Start Mobile Header -->
    <div class="mobile-header mobile-header-bg-color--black section-fluid d-lg-block d-xl-none">
        <div class="container">
            <div class="row">
                <div class="col-12 d-flex align-items-center justify-content-between">
                    <!-- Start Mobile Left Side -->
                    <div class="mobile-header-left">
                        <ul class="mobile-menu-logo">
                            <li>
                                <a href="/">
                                    <div class="logo">
                                        <img src="/userMng-assets/images/logo/1.png" alt="" />
                                    </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- End Mobile Left Side -->

                    <!-- Start Mobile Right Side -->
                    <div class="mobile-right-side">
                        <ul class="header-action-link action-color--black action-hover-color--white">
                            <li></li>
                            <li></li>
                            <li></li>
                            <li>
                                <a href="#mobile-menu-offcanvas" class="offcanvas-toggle offside-menu">
                                    <i class="icon-menu"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- End Mobile Right Side -->
                </div>
            </div>
        </div>
    </div>
    <!-- End Mobile Header -->

    <!--  Start Offcanvas Mobile Menu Section -->
    <div id="mobile-menu-offcanvas" class="offcanvas offcanvas-rightside offcanvas-mobile-menu-section">
        <!-- Start Offcanvas Header -->
        <div class="offcanvas-header text-right">
            <button class="offcanvas-close">
                <i class="ion-android-close"></i>
            </button>
        </div>
        <!-- End Offcanvas Header -->
        <!-- Start Offcanvas Mobile Menu Wrapper -->
        <div class="offcanvas-mobile-menu-wrapper">
            <!-- Start Mobile Menu  -->
            <div class="mobile-menu-bottom">
                <!-- Start Mobile Menu Nav -->
                <div class="offcanvas-menu">
                    <ul>
                        <li>
                            <a href="/"><span>Home</span></a>
                        </li>
                        <li>
                            <a href="/Shop"><span>Shop</span></a>
                        </li>
                        <li>
                            <a href="/Blog"><span>Blogs</span></a>
                        </li>
            
                        <li><a href="/About">About Us</a></li>
                        <li><a href="/Contact">Contact Us</a></li>
                    </ul>
                </div>
                <!-- End Mobile Menu Nav -->
            </div>
            <!-- End Mobile Menu -->

            <!-- Start Mobile contact Info -->
            <div class="mobile-contact-info">
                <div class="logo">
                    <a href="index.html"><img src="/userMng-assets/images/logo/1.png" alt="" /></a>
                </div>

                <!-- <ul class="social-link">
                    <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                    <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                    <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
                </ul> -->

                <ul class="user-link">
                    <li><a href="/Wishlist">Wishlist</a></li>
                    <li><a href="/Cart">Cart</a></li>
                    <li><a href="/Account">Account</a></li>
                </ul>
            </div>
            <!-- End Mobile contact Info -->
        </div>
        <!-- End Offcanvas Mobile Menu Wrapper -->
    </div>
    <!-- ...:::: End Offcanvas Mobile Menu Section:::... -->

    <!-- Start Offcanvas Mobile Menu Section -->
    <div id="offcanvas-about" class="offcanvas offcanvas-rightside offcanvas-mobile-about-section">
        <!-- Start Offcanvas Header -->
        <div class="offcanvas-header text-right">
            <button class="offcanvas-close">
                <i class="ion-android-close"></i>
            </button>
        </div>
        <!-- End Offcanvas Header -->
        <!-- Start Offcanvas Mobile Menu Wrapper -->
        <!-- Start Mobile contact Info -->
        <div class="mobile-contact-info">
            <div class="logo">
                <a href="index.html"><img src="/userMng-assets/images/logo/1.png" alt="" /></a>
            </div>

            <address class="address">
                <span>Name of the maker: Akhildas H.</span>
                <span>Call Us: 6238381782</span>
                <span>Email: akhildas675@gmail.com</span>
            </address>

            <ul class="social-link">
                <li>
                    <a href="#"><i class="fa fa-facebook"></i></a>
                </li>
                <li>
                    <a href="#"><i class="fa fa-twitter"></i></a>
                </li>
                <li>
                    <a href="#"><i class="fa fa-instagram"></i></a>
                </li>
                <li>
                    <a href="#"><i class="fa fa-linkedin"></i></a>
                </li>
            </ul>

            <ul class="user-link">
                <li><a href="/Wishlist">Wishlist</a></li>
                <li><a href="/Cart">Cart</a></li>
                <li><a href="/Account">Account</a></li>
            </ul>
        </div>
        <!-- End Mobile contact Info -->
    </div>
    <!-- ...:::: End Offcanvas Mobile Menu Section:::... -->

    <!-- Start Offcanvas Addcart Section -->
    <div id="offcanvas-add-cart" class="offcanvas offcanvas-rightside offcanvas-add-cart-section">
        <!-- Start Offcanvas Header -->
        <div class="offcanvas-header text-right">
            <button class="offcanvas-close">
                <i class="ion-android-close"></i>
            </button>
        </div>
        <!-- End Offcanvas Header -->

        <!-- Start  Offcanvas Addcart Wrapper -->
        <!-- End  Offcanvas Addcart Wrapper -->
    </div>
    <!-- End  Offcanvas Addcart Section -->

    <!-- Start Offcanvas Mobile Menu Section -->

    <!-- End Offcanvas Mobile Menu Section -->

    <!-- Start Offcanvas Search Bar Section -->
    <div id="search" class="search-modal">
        <button type="button" class="close">×</button>
        <form>
            <input type="search" placeholder="type keyword(s) here" />
            <button type="submit" class="btn btn-lg btn-white">Search</button>
        </form>
    </div>
    <!-- End Offcanvas Search Bar Section -->

    <!-- Offcanvas Overlay -->
    <div class="offcanvas-overlay"></div>

    <!-- ...:::: Start Breadcrumb Section:::... -->
    <div class="breadcrumb-section breadcrumb-bg-color--white">
        <div class="breadcrumb-wrapper">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <h3 class="breadcrumb-title">Checkout</h3>
                        <div class="breadcrumb-nav breadcrumb-nav-color--black breadcrumb-nav-hover-color--white">
                            <nav aria-label="breadcrumb">
                                <ul>
                                    <li><a href="/">Home</a></li>
                                    <li><a href="/productShop">Shop</a></li>
                                    <li class="active" aria-current="page">Checkout</li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ...:::: End Breadcrumb Section:::... -->

    <!-- ...:::: Start Checkout Section:::... -->
    <% if (locals.findAddress && locals.findCartItems.cartProducts.length> 0 &&locals.coupon && locals.wallet) { %>
        <div class="checkout-section">
            <div class="container">
                <div class="row">
                    <!-- User Quick Action Form -->
                    <div class="col-12">
                        <!-- ... (other content) ... -->
                    </div>
                </div>

                <!-- Start User Details Checkout Form -->
                <div class="row">
                    <!-- Left Column: Shipping and Payment Details -->
                    <div class="col-lg-7 col-md-12 order-2 order-lg-1" data-aos="fade-up" data-aos-delay="400">
                        <div class="checkout_form">
                            <div class="row">
                                <!-- Address Selection -->
                                <div class="col-12">
                                    <div class="default-form-box">
                                        <label>Select Shipping Address <span></span></label>

                                        <% if (findAddress.length> 0) { %> <% for (let i=0; i < findAddress.length; i++){ %>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="address"
                                                        id="address<%= i %>" value="<%=findAddress[i]._id %>" <%=i===0
                                                        ? 'checked' : '' %>>
                                                    <label class="form-check-label address-box" for="address<%= i %>">
                                                        <div>
                                                            <strong>
                                                                <%= findAddress[i].name %>
                                                            </strong><br />
                                                            Mobile: <%= findAddress[i].mobile %><br />
                                                                Home Address: <%= findAddress[i].homeAddress %><br />
                                                                    City: <%= findAddress[i].city %><br />
                                                                        District: <%= findAddress[i].district %><br />
                                                                            State: <%= findAddress[i].state %><br />
                                                                                Pincode: <%= findAddress[i].pincode %>
                                                                                    <br />
                                                        </div>
                                                    </label>
                                                </div>
                                                <% } %>
                                                    <% } else { %>
                                                        <p>No addresses found. Please add an address.</p>
                                                        <% } %>

                                                            <!-- Add Address Button -->
                                                            <button class="btn btn-secondary mt-3" type="button"
                                                                onclick="toggleAddAddressForm()">
                                                                Add Address
                                                            </button>

                                                            <!-- Add Address Form (Initially Hidden) -->
                                                            <div id="add-address-form"
                                                                style="display: none; margin-top: 20px">
                                                                <form id="addressForm" onsubmit="addAddress(event)">
                                                                    <div class="form-group">
                                                                        <label for="name">Name</label>
                                                                        <input type="text" id="name"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="mobile">Mobile</label>
                                                                        <input type="text" id="mobile"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="homeAddress">Home Address</label>
                                                                        <input type="text" id="homeAddress"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="city">City</label>
                                                                        <input type="text" id="city"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="district">District</label>
                                                                        <input type="text" id="district"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="state">State</label>
                                                                        <input type="text" id="state"
                                                                            class="form-control" required />
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label for="pincode">Pincode</label>
                                                                        <input type="text" id="pincode"
                                                                            class="form-control" required />
                                                                    </div>

                                                                    <button type="submit" class="btn btn-primary mt-3">
                                                                        Save Address
                                                                    </button>
                                                                </form>
                                                            </div>
                                    </div>
                                </div>

                                <!-- Payment Method Selection -->
                                <div class="col-12 mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment_method" id="cod"
                                            value="COD" onclick="hideWalletBalance()" />
                                        <label class="form-check-label" for="cod">Cash on Delivery</label>
                                    </div>
                                </div>

                                <div class="col-12 mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment_method" id="online"
                                            value="Online" onclick="hideWalletBalance()" />
                                        <label class="form-check-label" for="online">Online Payment</label>
                                    </div>
                                </div>

                                <div class="col-12 mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment_method" id="wallet"
                                            value="Wallet" onclick="showWalletBalance()" />
                                        <label class="form-check-label" for="wallet">Wallet</label>
                                    </div>
                                </div>

                                <% if (wallet && wallet.balance !==undefined) { %>
                                    <!-- Wallet Balance Display -->
                                    <div class="col-12 mt-3" id="wallet-balance-container" style="display: none">
                                        <div class="default-form-box">
                                            <label for="wallet-balance">Wallet Balance:</label>
                                            <p>
                                                Your current balance is:
                                                <strong>
                                                    <%= wallet.balance.toFixed(2) %>
                                                </strong>
                                            </p>
                                        </div>
                                    </div>
                                    <% } else { %>
                                        <!-- Fallback if wallet balance is not found -->
                                        <div class="col-12 mt-3" id="wallet-balance-container" style="display: none">
                                            <div class="default-form-box">
                                                <label for="wallet-balance">Wallet Balance:</label>
                                                <p><strong>No wallet balance found</strong></p>
                                            </div>
                                        </div>
                                        <% } %>


                            </div>
                        </div>
                    </div>

                    <!-- Right Column: Product Details Table -->
                    <div class="col-lg-5 col-md-12 order-1 order-lg-2" data-aos="fade-left" data-aos-delay="600">
                        <div class="order-container">
                            <h4 class="order-title">Your Order</h4>
                            <table id="orderTable">
                                <tr>
                                    <th>Product</th>
                                    <th>Details</th>
                                </tr>

                                <% let grandTotal=0 %>
                                    <!-- Initialize grand total -->
                                    <% for (let i=0; i < findCartItems.cartProducts.length; i++) { %>
                                        <% let product=findCartItems.cartProducts[i]; %>
                                            <% let price=product.productId.offerPrice || product.productId.realPrice; %>
                                                <% let productTotal=product.quantity * price; %>
                                                    <% grandTotal +=productTotal; %>
                                                        <!-- Add to grand total -->

                                                        <tr class="product-row">
                                                            <td>
                                                                <div style="
                        display: flex;
                        justify-content: center;
                        align-items: center;
                      ">
                                                                    <img src="../<%= product.productId.images[0] %>"
                                                                        alt="Product Image" />
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <strong style="font-size: 18px">
                                                                    <%= product.productId.productName %>
                                                                </strong><br />
                                                                <span style="font-size: 16px">Size: <%= product.size %>
                                                                </span><br />
                                                                <span style="font-size: 16px">Price: ₹<%= price %>
                                                                </span><br />

                                                    <% if (product.productId.offerId &&product.productId.offerId.offerPercentage) { %>
                                                 <span class="offer-available">Offer: <%= product.productId.offerId.offerPercentage %>
                                                                            %
                                                                            Off</span><br />
                                                                    <% } else { %>
                                                                        <span class="no-offer">No Offer
                                                                            Available</span><br />
                                                                        <% } %>

                                                                            <span style="font-size: 16px">Quantity: <%=
                                                                                    product.quantity %></span><br />
                                                                <span style="font-size: 16px">Total: ₹<%=productTotal.toFixed(2) %></span>
                                                            </td>
                                                        </tr>
                                                        <% } %>

                                                            <!-- Available Coupons -->
                                                            <% if (coupon.length> 0) { %>
                                                                <tr>
                                                                    <td colspan="2">
                                                                        <div id="availableCoupons">
                                                                            <p>Select any one coupon:</p>
                                                                            <ul>
                                                                                <% for (let i=0; i < coupon.length; i++){ %>
                                                                                    <li class="coupon-card">
                                                                                        <div>
                                                                                            <span
                                                                                                class="coupon-name"><strong>
                                                                                                    <%= coupon[i].couponN %>
                                                                                                </strong></span>
                                                                                            <span class="coupon-code">
                                                                                                <%= coupon[i].couponCode %>
                                                                                            </span>
                                                                                        </div>
                                                                                        <button id="coupon-btn-<%= i %>"
                                                                                            class="coupon-button"
                                                                                            data-coupon-code="<%= coupon[i].couponCode %>"
                                                                                            onclick="applyOrRemoveCoupon('<%= coupon[i].couponCode %>', '<%= i %>')">
                                                                                            Apply
                                                                                        </button>
                                                                                    </li>
                                                                                    <% } %>
                                                                            </ul>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                                <% } else { %>
                                                                    <tr>
                                                                        <td colspan="2">
                                                                            <p>No coupons available.</p>
                                                                        </td>
                                                                    </tr>
                                                                    <% } %>

                                                                        <!-- Grand Total -->
                                                                        <tr class="grand-total-row">
                                                                            <td colspan="2">
                                                                                Grand Total: ₹<strong id="grandTotal">
                                                                                    <%= grandTotal.toFixed(2) %>
                                                                                </strong>
                                                                            </td>
                                                                        </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Place Order Button -->
                <div class="col-12 mt-3">
                    <div class="form-group">
                        <button class="btn btn-primary btn-block" type="button" onclick="placeOrder(event)">
                            Place Order
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <% } else { %>
            <!-- Message for no product in checkout -->
            <div class="container">
                <div class="row">
                    <div class="col-12 text-center">
                        <i class="bi bi-cart" style="font-size: 48px; color: #666"></i>
                        <h2 class="mt-3">Your cart is empty.</h2>
                        <p>Please add some products to proceed to checkout.</p>

                        <a href="/Shop" class="btn btn-primary mt-3">
                            <i class="bi bi-shop"></i> Shop Now
                        </a>
                    </div>
                </div>
            </div>
            <% } %>
            <!-- Hidden input to store adjustments data -->
<input type="hidden" id="adjustmentsData" value='<%= JSON.stringify(adjustments) %>' />


                <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

                <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
                <!-- Include SweetAlert2 -->
                <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

                <script>
                    let appliedCouponCode = null;
                    let originalGrandTotal = parseFloat(
                        document.querySelector("#grandTotal").textContent
                    );


                    async function applyOrRemoveCoupon(couponCode, index) {
                        const button = document.getElementById(`coupon-btn-${index}`);
                       
                        const grandTotalElement = document.querySelector("#grandTotal");

                        if (button.disabled) {
                            Swal.fire({
                                icon: "info",
                                title: "Coupon Already Applied",
                                text: "Please remove the current coupon before applying another one.",
                                confirmButtonText: "OK",
                            });
                            return;
                        }

                        if (appliedCouponCode === couponCode) {

                            try {
                                const response = await fetch("/removeCoupon", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                });

                                const data = await response.json();

                                if (data.success) {
                                    grandTotalElement.textContent = originalGrandTotal.toFixed(2);
                                    appliedCouponCode = null;


                                    const buttons = document.querySelectorAll(".coupon-button");
                                    buttons.forEach((btn) => {
                                        btn.disabled = false;
                                        btn.textContent = "Apply";
                                    });

                                    Swal.fire({
                                        icon: "success",
                                        title: "Coupon Removed!",
                                        text: data.message,
                                        showConfirmButton: false,
                                        timer: 3000,
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Error",
                                        text: data.message,
                                    });
                                }
                            } catch (error) {
                                Swal.fire({
                                    icon: "error",
                                    title: "An error occurred!",
                                    text: "Error while removing the coupon. Please try again.",
                                });
                            }
                        } else {
                            const grandTotal = parseFloat(grandTotalElement.textContent);

                            try {
                                const response = await fetch("/applyCoupon", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify({
                                        couponCode: couponCode,
                                        totalAmount: grandTotal,
                                    }),
                                });

                                const data = await response.json();

                                if (data.success) {
                                    grandTotalElement.textContent = data.finalAmount;
                                    appliedCouponCode = couponCode;


                                    const buttons = document.querySelectorAll(".coupon-button");
                                    buttons.forEach((btn) => {
                                        if (btn !== button) {
                                            btn.disabled = true;
                                        } else {
                                            btn.textContent = "Remove";
                                        }
                                    });

                                    Swal.fire({
                                        icon: "success",
                                        title: "Coupon Applied!",
                                        text: `Discount Amount: ₹${data.discountAmount}`,
                                        showConfirmButton: false,
                                        timer: 3000,
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: data.message,
                                    });
                                }
                            } catch (error) {
                                Swal.fire({
                                    icon: "error",
                                    title: "An error occurred!",
                                    text: "Error while applying the coupon. Please try again.",
                                });
                            }
                        }
                    }

                    // Check if a coupon is already applied when the page loads
                    window.onload = async function () {
                        appliedCouponCode = null;
                    };

                    function placeOrder() {
                        const selectPaymentMethod = document.querySelector('input[name="payment_method"]:checked');
                        const selectedAddress = document.querySelector('input[name="address"]:checked');
                        const totalAmountOfProducts = parseFloat(
                            document.getElementById("grandTotal").textContent.replace(/[^\d.-]/g, "")
                        );

                        if (!selectPaymentMethod) {
                            Swal.fire({
                                icon: "warning",
                                title: "Payment Method Missing",
                                text: "Please select a payment method.",
                            });
                            return;
                        }

                        if (!selectedAddress) {
                            Swal.fire({
                                icon: "warning",
                                title: "Address Missing",
                                text: "Please select a shipping address.",
                            });
                            return;
                        }

                        const addressId = selectedAddress.value;
                        const paymentMethod = selectPaymentMethod.value;

                        // Check if grand total is more than 1000 and COD is selected
                        if (paymentMethod === "COD" && totalAmountOfProducts > 1000) {
                            Swal.fire({
                                icon: "warning",
                                title: "Payment Restriction",
                                text: "Cash on Delivery is only available for orders under ₹1000. Please select Online Payment or Wallet.",
                                confirmButtonText: "OK"
                            });
                            return; // Prevent further action
                        }

                        const orderData = {
                            addressId: addressId,
                            paymentStatus: "Failed",
                            paymentMethod: paymentMethod,
                            totalAmount: totalAmountOfProducts,
                            appliedCouponCode: appliedCouponCode,
                        };

                        if (paymentMethod === "COD") {
                            fetch("/codOrder", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify(orderData),
                            })
                                .then((response) => {
                                    if (response.ok) {
                                        Swal.fire({
                                            icon: "success",
                                            title: "Order Placed!",
                                            text: "Your order has been placed successfully.",
                                            confirmButtonText: "OK",
                                        }).then(() => {
                                            window.location.href = "/orderSuccess";
                                        });
                                    } else {
                                        return response.json().then((data) => {
                                            Swal.fire({
                                                icon: "error",
                                                title: "Order Failed",
                                                text: data.message || "Failed to place the order. Please try again.",
                                            });
                                        });
                                    }
                                })
                                .catch((error) => {
                                    Swal.fire({
                                        icon: "error",
                                        title: "An Error Occurred",
                                        text: "An error occurred while placing the order. Please try again.",
                                    });
                                });
                        } else if (paymentMethod === "Online") {
                            fetch("/onlinePay", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({ ...orderData, initial: true }),
                            })
                                .then((response) => response.json())
                                .then((data) => {
                                    // console.log("data", data);

                                    const orderId = data.orderId;
                                    const options = {
                                        key: "rzp_test_72sGbnDINNYlKN",
                                        amount: data.amount,
                                        currency: "INR",
                                        name: "SOLEWAY",
                                        description: "Purchase Details",
                                        order_id: orderId,
                                        handler: function (response) {
                                            if (response.razorpay_payment_id) {
                                                // console.log("paymentId:", response.razorpay_payment_id);

                                                // Successful payment logic
                                                fetch("/onlinePay", {
                                                    method: "POST",
                                                    headers: {
                                                        "Content-Type": "application/json",
                                                    },
                                                    body: JSON.stringify({
                                                        addressId: selectedAddress.value,
                                                        paymentStatus: "Received",
                                                        paymentId: response.razorpay_payment_id,
                                                        paymentMethod: paymentMethod,
                                                        totalAmount: totalAmountOfProducts,
                                                        couponCode: appliedCouponCode,
                                                    }),
                                                })
                                                    .then(() => {
                                                        Swal.fire({
                                                            icon: "success",
                                                            title: "Payment Successful!",
                                                            text: "Your payment was successful and your order has been placed.",
                                                            confirmButtonText: "OK",
                                                        }).then(() => {
                                                            window.location.href = "/orderSuccess";
                                                        });
                                                    })
                                                    .catch((error) => {
                                                        console.error("Order creation error:", error);
                                                        Swal.fire({
                                                            icon: "error",
                                                            title: "Order Failed",
                                                            text: "Failed to place the order after payment. Please contact support.",
                                                        });
                                                    });
                                            }
                                        },
                                        prefill: {
                                            name: "SOLEWAY",
                                            email: "akhildas@example.com",
                                            contact: "7896541230",
                                        },
                                        theme: {
                                            color: "#F37254",
                                        },
                                        modal: {
                                            ondismiss: function () {
                                                // Payment failed or was closed
                                                Swal.fire({
                                                    icon: "error",
                                                    title: "Payment Failed",
                                                    text: "Payment was not completed. Your order will be created. Please check the Order Details page and retry the payment.",
                                                    confirmButtonText: "OK",
                                                }).then((result) => {
                                                    if (result.isConfirmed) {
                                                        // Reload the page when "OK" button is clicked
                                                        location.reload();
                                                    }
                                                });

                                                // Send request to mark order as pending
                                                fetch("/onlinePay", {
                                                    method: "POST",
                                                    headers: {
                                                        "Content-Type": "application/json",
                                                    },
                                                    body: JSON.stringify({
                                                        addressId: selectedAddress.value,
                                                        paymentStatus: "Failed",
                                                        paymentMethod: paymentMethod,
                                                        totalAmount: totalAmountOfProducts,
                                                        couponCode: appliedCouponCode,
                                                    }),
                                                })
                                                    .then(() => {
                                                        // Optionally, add a delay before redirecting to give users time to see the message
                                                        // setTimeout(() => {
                                                        //     window.location.href = "/Checkout";
                                                        // }, 3000);
                                                    })
                                                    .catch((error) => {
                                                        console.error("Order creation error on failure:", error);
                                                        Swal.fire({
                                                            icon: "error",
                                                            title: "Order Update Failed",
                                                            text: "Failed to update order after payment failure. Please contact support.",
                                                        });
                                                    });
                                            },

                                        },
                                    };

                                    const razorpayInstance = new Razorpay(options);
                                    razorpayInstance.open();
                                })
                                .catch((error) => {
                                    console.error("Payment initiation error:", error);
                                    Swal.fire({
                                        icon: "error",
                                        title: "Payment Failed",
                                        text: "There was an error initiating the payment. Please try again.",
                                        confirmButtonText: "OK",
                                    });
                                });
                                //
                        }
                        else if (paymentMethod === "Wallet") {
                            fetch("/walletOrder", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify(orderData),
                            })
                                .then((response) => {
                                    if (response.ok) {

                                        Swal.fire({
                                            icon: "success",
                                            title: "Order Placed!",
                                            text: "Your order has been placed successfully.",
                                            confirmButtonText: "OK",
                                        }).then(() => {
                                            window.location.href = "/orderSuccess";
                                        });
                                    } else if (response.status === 400) {

                                        return response.json().then((data) => {
                                            Swal.fire({
                                                icon: "error",
                                                title: "Order Failed",
                                                text: data.message ||"Insufficient wallet balance. Please add funds to your wallet.",
                                            });
                                        });
                                    } else {

                                        Swal.fire({
                                            icon: "error",
                                            title: "Order Failed",
                                            text: "Failed to place the order. Please try again.",
                                        });
                                    }
                                    
                                }).catch((error) => {
                                    console.error("Error:", error);
                                    Swal.fire({
                                        icon: "error",
                                        title: "An Error Occurred",
                                        text: "An error occurred while placing the order. Please try again.",
                                    });
                                });
                                
                        }
                    }
            
                    function calculateGrandTotal() {
                        let total = 0;


                        const rows = document.querySelectorAll("#orderTable tr.product-row");

                        rows.forEach((row) => {

                            const totalCell = row.querySelector("td span:last-of-type");

                            if (totalCell) {

                                const totalValue = parseFloat(
                                    totalCell.textContent.replace(/[^\d.-]/g, "")
                                );

                                if (!isNaN(totalValue)) {
                                    total += totalValue;
                                }
                            }
                        });


                        document.getElementById("grandTotal").textContent = total.toFixed(2);
                    }

                    // Run the function when the page loads
                    window.onload = calculateGrandTotal;

                    // // Function to copy the coupon code to clipboard
                    // function copyCouponCode(code) {
                    //     // Create a temporary input element to store the coupon code
                    //     const tempInput = document.createElement('input');
                    //     tempInput.value = code;
                    //     document.body.appendChild(tempInput);

                    //     // Select the code and copy it to clipboard
                    //     tempInput.select();
                    //     document.execCommand('copy');

                    //     document.body.removeChild(tempInput);

                    //     // Provide feedback to the user
                    //     alert('Coupon code ' + code + ' copied to clipboard!');
                    // }
                </script>

                <br />
                <br />

                <!-- Start Footer Section -->
                <%- include('./partials/userFooter.ejs') %>

                    <!-- End Footer Top -->

                    <!-- material-scrolltop button -->
                    <button class="material-scrolltop" type="button"></button>

                    <!-- Start Modal Add cart -->

                    <!-- Use the minified version files listed below for better performance and remove the files listed above -->
                    <script src="/userMng-assets/js/vendor/vendor.min.js"></script>
                    <script src="/userMng-assets/js/plugins/plugins.min.js"></script>

                    <!-- Main JS -->
                    <script src="/userMng-assets/js/main.js"></script>
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


                    <script>
                        function toggleAddAddressForm() {
                            var form = document.getElementById("add-address-form");
                            form.style.display = form.style.display === "none" ? "block" : "none";
                        }

                        async function addAddress(event) {
                            event.preventDefault();

                            const name = document.getElementById("name").value;
                            const mobile = document.getElementById("mobile").value;
                            const homeAddress = document.getElementById("homeAddress").value;
                            const city = document.getElementById("city").value;
                            const district = document.getElementById("district").value;
                            const state = document.getElementById("state").value;
                            const pincode = document.getElementById("pincode").value;

                            try {
                                const response = await fetch("/Addaddress", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify({
                                        name,
                                        mobile,
                                        homeAddress,
                                        city,
                                        district,
                                        state,
                                        pincode,
                                    }),
                                });

                                const data = await response.json();

                                if (response.ok) {
                                    Toastify({
                                        text: "Address added successfully!",
                                        duration: 3000,
                                        gravity: "top",
                                        position: "center",
                                        backgroundColor: "green",
                                        stopOnFocus: true,
                                    }).showToast();

                                    setTimeout(() => {
                                        window.location.reload();
                                    }, 3000);
                                    document.getElementById("addressForm").reset();
                                } else {
                                    Toastify({
                                        text: data.message || "Failed to add address",
                                        duration: 3000,
                                        gravity: "top",
                                        position: "center",
                                        backgroundColor: "red",
                                        stopOnFocus: true,
                                    }).showToast();
                                }
                            } catch (error) {
                                Toastify({
                                    text: "Server error. Please try again.",
                                    duration: 3000,
                                    gravity: "top",
                                    position: "center",
                                    backgroundColor: "red",
                                    stopOnFocus: true,
                                }).showToast();
                            }
                        }


                        function showWalletBalance() {
                            var walletContainer = document.getElementById(
                                "wallet-balance-container"
                            );
                            walletContainer.style.display = "block"; // Show wallet balance
                        }

                        function hideWalletBalance() {
                            var walletContainer = document.getElementById(
                                "wallet-balance-container"
                            );
                            walletContainer.style.display = "none"; // Hide wallet balance
                        }




                        document.addEventListener("DOMContentLoaded", function () {
  
  const adjustmentsData = document.getElementById("adjustmentsData").value;

  
  const adjustments = adjustmentsData ? JSON.parse(adjustmentsData) : [];

  
  if (adjustments && adjustments.length > 0) {
    adjustments.forEach((adjustment) => {
      Swal.fire({
        title: "Cart Adjustment",
        text: adjustment.message,
        icon: "info",
        confirmButtonText: "Okay",
      });
    });
  }
});

                    </script>
                    
</body>

</html>