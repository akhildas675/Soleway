<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Edit product</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/user-assets/images/icons/FAVICON SW.png">
    <!-- Template CSS -->
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .image-container {
            display: inline-block;
            position: relative;
            margin: 5px;
        }

        .preview-image {
            width: 100px;
            height: 100px;
        }

        .remove-image {
            position: absolute;
            top: 0;
            right: 0;
            background: red;
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
        }

        .small-input {
            max-width: 100px;
            /* Adjust this value as needed */
        }
    </style>
   

     <!-- Toastify CSS -->

     <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    
</head>

</head>

<body>
    <div class="screen-overlay"></div>
    <%- include('./partials/adminAside.ejs') %>
        <main class="main-wrap">
            <%- include('./partials/adminNav.ejs') %>

                <% if (locals.products) { %>
                    <form id="productAdd" action="/admin/updateProduct?productId=<%= products._id %>" method="post"
                        enctype="multipart/form-data">
                        <input type="hidden" id="productId" name="productId" value="<%= products._id %>">


                        <section class="content-main">
                            <div class="row">
                                <div class="col-9">
                                    <div class="content-header">
                                        <h2 class="content-title">Edit Product</h2>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="card mb-4">
                                        <div class="card-header"></div>
                                        <div class="card-body">
                                            <div class="mb-4">
                                                <label for="product_name" class="form-label">Product Name</label>
                                                <input type="text" value="<%= products.productName %>"
                                                    class="form-control" id="product_name" name="productName">
                                                <div id="productNameError" class="error"></div>
                                            </div>
                                            <div class="mb-4">
                                                <label class="form-label">Full Description</label>
                                                <textarea class="form-control" rows="4"
                                                    name="description"><%= products.description %></textarea>
                                                <div id="descriptionError" class="error"></div>
                                            </div>
                                            <div class="row">
                                                <div class="col-lg-4">
                                                    <div class="mb-4">
                                                        <label class="form-label">Price</label>
                                                        <input placeholder="â‚¹" type="text" class="form-control"
                                                            pattern="^[1-9][0-9]*(\.[0-9]+)?$" name="realPrice"
                                                            value="<%= products.realPrice %>">
                                                        <div id="realPriceError" class="error"></div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-4">
                                                    <div class="mb-4">
                                                        <!-- <label class="form-label">Offer</label>
                                                <div class="row gx-2">
                                                   
                                                    <input placeholder="Offer" type="text" class="form-control" name="offer" id="offer" value="<%= products.offer ? products.offer : '' %>">
                                                    <div id="brandError" class="error" style="color: red;"></div>
                                                </div> -->
                                                    </div>
                                                </div>

                                                <div class="col-lg-4">
                                                    <div class="mb-4">
                                                        <label class="form-label">Brand</label>
                                                        <div class="row gx-2">
                                                            <input placeholder="Brand" type="text" class="form-control"
                                                                name="brandName" id="brand"
                                                                value="<%= products.brandName%>">
                                                            <div id="brandError" class="error" style="color: red;">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-4"></div>
                                        </div>
                                    </div>
                                    <div class="card mb-4">
                                        <div class="card-body">
                                            <h4>Size and Quantity</h4>
                                            <div class="table-responsive">
                                                <table class="table table-bordered" id="sizeQuantityTable">
                                                    <thead>
                                                        <tr>
                                                            <th>Size</th>
                                                            <th>Quantity</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="sizeQuantityContainer">
                                                        <% products.sizes.forEach((size, index)=> { %>
                                                            <tr id="row<%= index %>">
                                                                <td>
                                                                    <input type="text" value="<%= size.size %>"
                                                                        class="form-control small-input"
                                                                        id="size<%= size.size %>"
                                                                        name="size<%= size.size %>"
                                                                        oninput="validateInput(this, 'size')">
                                                                    <div id="size<%= size.size %>Error" class="error"
                                                                        style="color: red;"></div>
                                                                </td>
                                                                <td>
                                                                    <input type="text" value="<%= size.quantity %>"
                                                                        class="form-control small-input"
                                                                        id="quantity<%= size.size %>"
                                                                        name="quantity<%= size.size %>"
                                                                        oninput="validateInput(this, 'quantity')">
                                                                    <div id="quantity<%= size.size %>Error"
                                                                        class="error" style="color: red;"></div>
                                                                </td>
                                                                <td>
                                                                    <button type="button"
                                                                        class="btn btn-danger btn-sm cancel-btn"
                                                                        data-row="row<%= index %>"
                                                                        onclick="removeRow('row<%= index %>')">Remove</button>
                                                                </td>
                                                            </tr>
                                                            <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                            <button type="button" id="addSizeQuantityBtn"
                                                class="btn btn-primary mt-3">Add Another Size and Quantity</button>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-lg-3">
                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h4>Media</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="input-upload">
                                                <div id="imagePreview" style="position: relative;">
                                                    <% if (products.images) { %>
                                                        <% products.images.forEach((image, i)=> { %>
                                                            <div class="image-container">
                                                                <% if (image) { %>
                                                                    <img src="<%= image %>" alt="Existing Image"
                                                                        class="preview-image">
                                                                    <!-- Cross button to remove the image -->
                                                                    <button type="button" class="remove-image"
                                                                        data-index="<%= i %>"
                                                                        onclick="removeImage('<%= i %>')">&times;</button>
                                                                    <input type="hidden" name="existingImages[]"
                                                                        value="<%= image %>">
                                                                    <% } %>
                                                            </div>
                                                            <% }); %>
                                                                <% } else { %>
                                                                    <img src="admin-assets/imgs/theme/upload.svg"
                                                                        alt="Upload Icon">
                                                                    <% } %>
                                                </div>

                                                <!-- Section to preview newly selected images -->
                                                <div id="newImagePreview" style="position: relative; margin-top: 20px;">
                                                </div>

                                                <input id="imageInput" class="form-control" type="file"
                                                    accept="image/jpeg,image/jpg,image/png,image/webp" name="images"
                                                    multiple>
                                                <div id="imageError" class="error"></div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h4>Select Categories</h4>
                                        </div>
                                        <% if (categories) { %>
                                            <div class="card-body">
                                                <div class="row gx-2">
                                                    <div class="col-sm-6 mb-3">
                                                        <label class="form-label">Category</label>
                                                        <select class="form-select" name="category">
                                                            <% categories.forEach(category=> { %>
                                                                <option value="<%= category.id %>"
                                                                    <%=category.id===products.categoryId ? 'selected'
                                                                    : '' %>>
                                                                    <%= category.categoryName %>
                                                                </option>
                                                                <% }); %>
                                                        </select>
                                                        <div id="categoryError" class="error"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                            <div class="card mb-4">
                                                <div class="card-header">
                                                    <h4>Select Offer</h4>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row gx-2">
                                                        <div class="col-sm-6 mb-3">
                                                            <label class="form-label">Offers</label>
                                                            <select class="form-select" name="offerId" id="offer">


                                                                <% for( let i=0; i < offer.length; i++ ) { %>
                                                                    <option value="<%= offer[i]._id %>">
                                                                        <%= offer[i].offerPercentage %>
                                                                    </option>

                                                                    <% } %>


                                                            </select>
                                                        </div>

                                                    </div> <!-- row.// -->
                                                </div>
                                            </div>
                                            <% } %>
                                    
                                    <div class="row gx-2">
                                        <button type="submit" class="btn btn-md rounded font-sm hover-up">Update
                                            Product</button>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </form>

                    <% } %>


                        <script>
                          
                          function removeImage(imageIndex) {
    const productId = document.getElementById('productId').value;
    console.log("Image index:", imageIndex);
    console.log("Delete button clicked");
    console.log("productId", productId);

    fetch('/admin/removeImage', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            index: imageIndex,
            productId: productId
        })
    })
    .then(response => {
        console.log('Response status:', response.status);
        return response.json(); 
    })
    .then(data => {
        console.log('Server response:', data);
        if (data.success) {
            // Success message using Toastify
            Toastify({
                text: data.message || "Image removed successfully",
                duration: 3000, // 3 seconds
                gravity: "top", // `top` or `bottom`
                position: "right", // `left`, `center` or `right`
                backgroundColor: "#4CAF50", // Green for success
                close: true // Display a close button
            }).showToast();

            document.querySelector(`[data-index="${imageIndex}"]`).closest('.image-container').remove();
        } else {
            // Error message using Toastify
            Toastify({
                text: data.message || "Failed to remove image",
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: "#f44336", // Red for error
                close: true
            }).showToast();
        }
    })
    .catch(error => {
        console.error('Fetch error:', error);
        // Network error using Toastify
        Toastify({
            text: "An error occurred while removing the image",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#f44336", // Red for error
            close: true
        }).showToast();
    });
}

document.getElementById('imageInput').addEventListener('change', function (event) {
    const files = event.target.files;
    const newImagePreview = document.getElementById('newImagePreview');
    newImagePreview.innerHTML = '';

    Array.from(files).forEach(file => {
        const reader = new FileReader();
        reader.onload = function (e) {
            const container = document.createElement('div');
            container.classList.add('image-container');

            const img = document.createElement('img');
            img.src = e.target.result;
            img.alt = 'New Image';
            img.classList.add('preview-image');

            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.classList.add('remove-image');
            removeButton.innerHTML = '&times;';
            removeButton.onclick = function () {
                container.remove();
            };

            container.appendChild(img);
            container.appendChild(removeButton);

            newImagePreview.appendChild(container);
        };
        reader.readAsDataURL(file);
    });
});

                            function validateFiles(files) {
                                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
                                for (let i = 0; i < files.length; i++) {
                                    if (!allowedTypes.includes(files[i].type)) {
                                        Swal.fire({
                                            icon: 'warning',
                                            title: 'Invalid File Type',
                                            text: `File "${files[i].name}" is not an allowed image type. Only JPEG, JPG, PNG, and WEBP files are allowed.`,
                                            confirmButtonText: 'Ok'
                                        });
                                        document.getElementById('imageInput').value = ''; 
                                        return;
                                    }
                                }
                            }



                            function validatePage() {
                                const productName = document.querySelector('input[name="productName"]').value.trim();
                                const description = document.querySelector('textarea[name="description"]').value.trim();
                                const realPrice = document.querySelector('input[name="realPrice"]').value.trim();
                                const stock = document.querySelector('input[name="stock"]').value.trim();
                                const size = document.querySelector('input[name="size"]').value.trim();
                                const category = document.querySelector('select[name="category"]').value.trim();

                                const productNameError = document.getElementById('productNameError');
                                const descriptionError = document.getElementById('descriptionError');
                                const realPriceError = document.getElementById('realPriceError');
                                const stockError = document.getElementById('stockError');
                                const sizeError = document.getElementById('sizeError');
                                const categoryError = document.getElementById('categoryError');

                                let isValid = true;

                                productNameError.textContent = '';
                                descriptionError.textContent = '';
                                realPriceError.textContent = '';
                                stockError.textContent = '';
                                sizeError.textContent = '';
                                categoryError.textContent = '';

                                if (productName === '') {
                                    productNameError.textContent = 'Product name is required';
                                    isValid = false;
                                }

                                if (description === '') {
                                    descriptionError.textContent = 'Description is required';
                                    isValid = false;
                                }

                                if (realPrice === '') {
                                    realPriceError.textContent = 'Price is required';
                                    isValid = false;
                                } else if (!/^[1-9][0-9]*(\.[0-9]+)?$/.test(realPrice)) {
                                    realPriceError.textContent = 'Enter a valid price';
                                    isValid = false;
                                }

                                if (stock === '') {
                                    stockError.textContent = 'Quantity is required';
                                    isValid = false;
                                } else if (!/^[1-9][0-9]*(\.[0-9]+)?$/.test(stock)) {
                                    stockError.textContent = 'Enter a valid quantity';
                                    isValid = false;
                                }

                                if (size === '') {
                                    sizeError.textContent = 'Size is required';
                                    isValid = false;
                                } else if (!/^[0-9]+(\.[0-9]+)?$/.test(size)) {
                                    sizeError.textContent = 'Enter a valid size';
                                    isValid = false;
                                }

                                if (category === '') {
                                    categoryError.textContent = 'Category is required';
                                    isValid = false;
                                }

                                setTimeout(() => {
                                    productNameError.textContent = '';
                                    descriptionError.textContent = '';
                                    realPriceError.textContent = '';
                                    stockError.textContent = '';
                                    sizeError.textContent = '';
                                    categoryError.textContent = '';
                                }, 3000);

                                return isValid;
                            }

                            document.getElementById('productAdd').addEventListener('submit', function (event) {
                                if (!validatePage()) {
                                    event.preventDefault();
                                }
                            });



                        </script>

                        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
                        <script>
                            document.addEventListener('DOMContentLoaded', function () {
                              const urlParams = new URLSearchParams(window.location.search);
                        
                              if (urlParams.get('update') === 'success') {
                                Toastify({
                                  text: "Product updated successfully!",
                                  duration: 5000, // 5 seconds
                                  gravity: "top", // Toast will appear at the top
                                  position: "center", // Toast will appear in the center horizontally
                                  backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                                  stopOnFocus: true, // Prevents the toast from closing when hovered
                                }).showToast();
                              }
                            });
                          </script>
                          
                        
                        <script>
                            let sizeCounter = 8;
                            const maxFields = 6;
                
                            document.getElementById('addSizeQuantityBtn').addEventListener('click', function () {
                                const container = document.getElementById('sizeQuantityContainer');
                
                
                                const rows = container.getElementsByTagName('tr');
                                const lastRow = rows[rows.length - 1];
                                const sizeInput = lastRow.querySelector('input[name^="size"]');
                                const quantityInput = lastRow.querySelector('input[name^="quantity"]');
                
                                const isSizeValid = validateInput(sizeInput, 'size');
                                const isQuantityValid = validateInput(quantityInput, 'quantity');
                
                                if (!isSizeValid || !isQuantityValid) {
                
                                    return;
                                }
                
                                if (rows.length >= maxFields) {
                                    alert('Maximum of 6 size and quantity rows reached.');
                                    return;
                                }
                
                                const newRow = createSizeQuantityRow(sizeCounter);
                                container.appendChild(newRow);
                
                                sizeCounter++;
                            });
                
                
                            function createSizeQuantityRow(counter) {
                                const newRow = document.createElement('tr');
                                newRow.id = `row${counter}`;
                
                                const sizeCell = document.createElement('td');
                                const quantityCell = document.createElement('td');
                                const actionCell = document.createElement('td');
                
                                const sizeInput = createInputField(`size${counter}`, 'Size', 'Enter Size', null, 'size');
                                const quantityInput = createInputField(`quantity${counter}`, 'Quantity', 'Enter Quantity', '^[0-9]+(\\.[0-9]+)?$', 'quantity');
                                const cancelButton = createCancelButton(`row${counter}`);
                
                                sizeCell.appendChild(sizeInput);
                                quantityCell.appendChild(quantityInput);
                                actionCell.appendChild(cancelButton);
                
                                newRow.appendChild(sizeCell);
                                newRow.appendChild(quantityCell);
                                newRow.appendChild(actionCell);
                
                                return newRow;
                            }
                
                            // Function to create an input field
                            function createInputField(id, placeholder, labelText, pattern = null, type = 'generic') {
                                const input = document.createElement('input');
                                input.setAttribute('type', 'text');
                                input.setAttribute('placeholder', placeholder);
                                input.classList.add('form-control', 'small-input');
                                input.id = id;
                                input.setAttribute('name', id);
                                input.setAttribute('oninput', `validateInput(this, '${type}')`);
                
                                const errorDiv = document.createElement('div');
                                errorDiv.id = `${id}Error`;
                                errorDiv.classList.add('error');
                                errorDiv.style.color = 'red';
                
                                const wrapperDiv = document.createElement('div');
                                wrapperDiv.appendChild(input);
                                wrapperDiv.appendChild(errorDiv);
                
                                return wrapperDiv;
                            }
                
                
                            function createCancelButton(rowId) {
                                const button = document.createElement('button');
                                button.type = 'button';
                                button.classList.add('btn', 'btn-danger', 'btn-sm');
                                button.innerText = 'Remove';
                                button.setAttribute('data-row', rowId);
                
                                button.addEventListener('click', function () {
                                    removeRow(rowId);
                                });
                
                                return button
                            }
                
                
                            function removeRow(rowId) {
                                const container = document.getElementById('sizeQuantityContainer');
                                if (container.getElementsByTagName('tr').length > 1) {
                                    document.getElementById(rowId).remove();
                                }
                            }
                
                
                            function validateInput(input, type) {
                                const errorDiv = document.getElementById(`${input.id}Error`);
                                const value = input.value.trim();
                
                                if (type === 'size') {
                
                                    if (value === '' || isNaN(value) || parseFloat(value) <= 4 || parseFloat(value) > 15) {
                                        errorDiv.textContent = 'Please enter a valid size (5-15).';
                                        return false;
                                    }
                                } else if (type === 'quantity') {
                
                                    if (value === '' || isNaN(value) || parseFloat(value) < 0) {
                                        errorDiv.textContent = 'Please enter a valid positive number.';
                                        return false;
                                    }
                                }
                
                                errorDiv.textContent = '';
                                return true;
                            }
                        </script>
                
<!-- Toastify JS -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
                      
</body>

</html>